kind: DaemonSet

image:
  repository: cr.fluentbit.io/fluent/fluent-bit
  tag:
  digest:
  pullPolicy: IfNotPresent

serviceMonitor:
  enabled: true
  selector:
    lsst.io/monitor: "true"
    prometheus.io/cluster: ${ get .ClusterLabels "management.cattle.io/cluster-display-name" }

prometheusRule:
  enabled: true
  namespace: ""
  additionalLabels:
    lsst.io/rule: "true"
  rules:
  - alert: NoOutputBytesProcessed
    expr: rate(fluentbit_output_proc_bytes_total[5m]) == 0
    annotations:
      message: |
        Fluent Bit instance {{ $labels.instance }}'s output plugin {{ $labels.name }} has not processed any
        bytes for at least 15 minutes.
      summary: No Output Bytes Processed
    for: 15m
    labels:
      severity: critical

dashboards:
  enabled: true
  labelKey: grafana_dashboard
  labelValue: 1
  annotations: {}
  namespace: ""

resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

podDisruptionBudget:
  enabled: false
  annotations: {}
  maxUnavailable: 30%

nodeSelector: {}

tolerations: []

affinity: {}

labels:
  lsst.team.io/infra: "true"
  lsst.io/role: logging
  lsst.io/component: fluent-bit
  lsst.io/env: kube
  lsst.io/project: o11y

annotations: {}

podAnnotations: {}

podLabels:
  lsst.team.io/infra: "true"
  lsst.io/role: logging
  lsst.io/component: fluent-bit
  lsst.io/env: kube
  lsst.io/project: o11y

minReadySeconds:

terminationGracePeriodSeconds:

priorityClassName: ""
envWithTpl: []
envFrom: []
extraContainers: []
flush: 1

metricsPort: 2020

extraPorts: []

extraVolumes:
- name: db
  emptyDir:
    sizeLimit: 128Mi

extraVolumeMounts:
- name: db
  mountPath: /fluent-bit/db

updateStrategy: {}
existingConfigMap: ""

luaScripts:
  systemd.lua: |
    function add_time(tag, timestamp, record)
      new_record = {}

      timeStr = os.date("!*t", timestamp["sec"])
      t = string.format("%4d-%02d-%02dT%02d:%02d:%02d.%sZ",
      timeStr["year"], timeStr["month"], timeStr["day"],
      timeStr["hour"], timeStr["min"], timeStr["sec"],
      timestamp["nsec"])

      kubernetes = {}
      kubernetes["pod_name"] = record["_HOSTNAME"]
      kubernetes["container_name"] = record["SYSLOG_IDENTIFIER"]
      kubernetes["namespace_name"] = "kube-system"

      new_record["time"] = t
      new_record["log"] = record["MESSAGE"]
      new_record["kubernetes"] = kubernetes

      return 1, timestamp, new_record
    end
  containerd.lua: |
    function containerd( tag, timestamp, record)
           if(record["logtag"]~=nil)
           then
           timeStr = os.date("!*t",  timestamp["sec"])
            t = string.format("%4d-%02d-%02dT%02d:%02d:%02d.%sZ",
            timeStr["year"], timeStr["month"], timeStr["day"],
            timeStr["hour"], timeStr["min"], timeStr["sec"],
            timestamp["nsec"]);
            record["time"] = t;
            record["log"] = record["message"];
            record["message"] =  nil;
            return 1, timestamp, record
            else
            return 0,timestamp,record
           end
    end

config:
  service: |
    [SERVICE]
        Daemon Off
        Flush {{ .Values.flush }}
        Log_Level {{ .Values.logLevel }}
        Parsers_File /fluent-bit/etc/parsers.conf
        Parsers_File /fluent-bit/etc/conf/custom_parsers.conf
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_Port {{ .Values.metricsPort }}
        Health_Check On
        HTTP_Max_Connections 200
        HTTP_Buffer_Size 128k

  inputs: |
    [INPUT]
        Name              tail
        Tag               kube.*
        Path              /var/log/containers/*.log
        multiline.parser  docker, cri
        Mem_Buf_Limit     100MB
        Read_from_Head    false
        Refresh_Interval  10
        Skip_Long_Lines   true
        DB                /fluent-bit/db/kube.db
        DB.Sync           Normal

    [INPUT]
        Name              tail
        Tag               service.kubelet
        Path              /var/lib/rancher/rke2/agent/logs/kubelet.log
        DB                /fluent-bit/db/kubelet.db
        Read_from_Head    false

  filters: |
    [Filter]
        Name kubernetes
        Match kube.*
        Kube_URL https://kubernetes.default.svc:443
        Kube_CA_File /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File /var/run/secrets/kubernetes.io/serviceaccount/token
        Merge_Log On
        Keep_Log Off
        K8S-Logging.Parser On
        K8S-Logging.Exclude On
        Labels true
        Annotations false

    [Filter]
        Name nest
        Match kube.*
        Operation lift
        Nested_under kubernetes
        Add_prefix kubernetes_

    [Filter]
        Name modify
        Match *
        Add prom_cluster ${ get .ClusterLabels "management.cattle.io/cluster-display-name" }.${ .ClusterLabels.site }
        Remove_wildcard kubernetes_labels_app*
        Remove_wildcard kubernetes_labels_ceph*
        Remove_wildcard kubernetes_labels_mgr*
        Remove_wildcard kubernetes_labels_mon*
        Remove_wildcard kubernetes_labels_rook*
        Remove_wildcard kubernetes_labels_pod_template_hash
        Remove_wildcard kubernetes_labels_controller_revision_hash
        Remove pod_template_hash
        Remove kubernetes_pod_id
        Remove kubernetes_host
        Remove kubernetes_container_hash
        Remove docker_id
        Remove container_image
        Remove _p
        Remove pod_ip
        Remove app_kubernetes_io_created_by
        Remove app_kubernetes_io_managed_by
        Remove app_kubernetes_io_instance
        Remove app_kubernetes_io_name
        Remove app_kubernetes_io_part_of
        Remove controller_revision_hash
        Remove helm_sh_chart
        Remove service_name
        Remove instance
        Remove mgr
        Remove mgr_role
        Remove mon
        Remove mon_cluster
        Remove mon_daemon
        Remove rook_io_operator_namespace

    [Filter]
        Name modify
        Match kube.*
        Add log_type kubernetes

    [Filter]
        Name modify
        Match service.kubelet
        Add log_type kubelet_log

    [Filter]
        Name nest
        Match kube.*
        Operation nest
        Wildcard kubernetes_*
        Nest_under kubernetes
        Remove_prefix kubernetes_

    [Filter]
        Name lua
        Match kube.*
        script /fluent-bit/scripts/containerd.lua
        call containerd
        time_as_table true

    [Filter]
        Name lua
        Match service.*
        script /fluent-bit/scripts/systemd.lua
        call add_time
        time_as_table true

  upstream: {}

  customParsers: |
    [PARSER]
      Name        docker_no_time
      Format      json
      Time_Keep   Off
      Time_Key    time
      Time_Format %Y-%m-%dT%H:%M:%S.%L

    [PARSER]
        Name        auditd_line
        Format      regex
        Regex       ^node=(?<node>\S+)\s+type=(?<type>\S+)\s+msg=audit\((?<audit_time>[^)]+)\):(?<message>.*)
        Time_Key    audit_time
        Time_Format %s.%L

    [PARSER]
        Name        syslog_line
        Format      regex
        Regex       ^(?<timestamp>\d{4}-\d{2}-\d{2}T[^\s]+)\s+(?<host>\S+)\s+(?<program>[^\[]+)\[\d+\]:\s+\<(?<severity>\w+)\>\s+(?<message>.*)
        Time_Key    timestamp
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z
  extraFiles: {}

  outputs: ""

volumeMounts:
- name: config
  mountPath: /fluent-bit/etc/conf

daemonSetVolumes:
- name: varlog
  hostPath:
    path: /var/log
- name: varlibdockercontainers
  hostPath:
    path: /var/lib/docker/containers
- name: etcmachineid
  hostPath:
    path: /etc/machine-id
    type: File

daemonSetVolumeMounts:
- name: varlog
  mountPath: /var/log
- name: varlibdockercontainers
  mountPath: /var/lib/docker/containers
  readOnly: true
- name: etcmachineid
  mountPath: /etc/machine-id
  readOnly: true

command:
- /fluent-bit/bin/fluent-bit

args:
- --workdir=/fluent-bit/etc
- --config=/fluent-bit/etc/conf/fluent-bit.conf

initContainers: []

logLevel: info

hotReload:
  enabled: true
  image:
    repository: ghcr.io/jimmidyson/configmap-reload
    tag: v0.11.1
    digest:
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 60Mi
    limits:
      cpu: 100m
      memory: 60Mi
