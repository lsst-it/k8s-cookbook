# kind -- DaemonSet or Deployment
kind: DaemonSet

image:
  repository: cr.fluentbit.io/fluent/fluent-bit
  # Overrides the image tag whose default is {{ .Chart.AppVersion }}
  # Set to "-" to not use the default value
  tag:
  digest:
  pullPolicy: IfNotPresent

serviceMonitor:
  enabled: true
  selector:
    lsst.io/monitor: "true"
  #   namespace: monitoring
  #   interval: 10s
  #   scrapeTimeout: 10s
  #  ## metric relabel configs to apply to samples before ingestion.
  #  ##
  #  metricRelabelings:
  #    - sourceLabels: [__meta_kubernetes_service_label_cluster]
  #      targetLabel: cluster
  #      regex: (.*)
  #      replacement: ${1}
  #      action: replace
  #  ## relabel configs to apply to samples after ingestion.
  #  ##
  #  relabelings:
  #    - sourceLabels: [__meta_kubernetes_pod_node_name]
  #      separator: ;
  #      regex: ^(.*)$
  #      targetLabel: nodename
  #      replacement: $1
  #      action: replace
  #  scheme: ""
  #  tlsConfig: {}

prometheusRule:
  enabled: true
  namespace: ""
  additionalLabels:
    lsst.io/rule: "true"
  rules:
  - alert: NoOutputBytesProcessed
    expr: rate(fluentbit_output_proc_bytes_total[5m]) == 0
    annotations:
      message: |
        Fluent Bit instance {{ $labels.instance }}'s output plugin {{ $labels.name }} has not processed any
        bytes for at least 15 minutes.
      summary: No Output Bytes Processed
    for: 15m
    labels:
      severity: critical

dashboards:
  enabled: true
  labelKey: grafana_dashboard
  labelValue: 1
  annotations: {}
  namespace: ""

resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

## only available if kind is Deployment
podDisruptionBudget:
  enabled: false
  annotations: {}
  maxUnavailable: 30%

nodeSelector: {}

tolerations: []

affinity: {}

labels:
  lsst.team.io/infra: "true"

annotations: {}

podAnnotations: {}

podLabels: {}

## How long (in seconds) a pods needs to be stable before progressing the deployment
##
minReadySeconds:

## How long (in seconds) a pod may take to exit (useful with lifecycle hooks to ensure lb deregistration is done)
##
terminationGracePeriodSeconds:

priorityClassName: ""

env:
- name: OS_LOGGING_USERNAME
  valueFrom:
    secretKeyRef:
      name: fluentbit-kube-credentials
      key: username
- name: OS_LOGGING_PASSWORD
  valueFrom:
    secretKeyRef:
      name: fluentbit-kube-credentials
      key: password

# The envWithTpl array below has the same usage as "env", but is using the tpl function to support templatable string.
# This can be useful when you want to pass dynamic values to the Chart using the helm argument "--set <variable>=<value>"
# https://helm.sh/docs/howto/charts_tips_and_tricks/#using-the-tpl-function
envWithTpl: []
#  - name: FOO_2
#    value: "{{ .Values.foo2 }}"
#
# foo2: bar2

envFrom: []

# This supports either a structured array or a templatable string
extraContainers: []

# Array mode
# extraContainers:
#   - name: do-something
#     image: busybox
#     command: ['do', 'something']

# String mode
# extraContainers: |-
#   - name: do-something
#     image: bitnami/kubectl:{{ .Capabilities.KubeVersion.Major }}.{{ .Capabilities.KubeVersion.Minor }}
#     command: ['kubectl', 'version']

flush: 1

metricsPort: 2020

extraPorts: []
#   - port: 5170
#     containerPort: 5170
#     protocol: TCP
#     name: tcp
#     nodePort: 30517

extraVolumes:
- name: db
  emptyDir:
    sizeLimit: 128Mi

extraVolumeMounts:
- name: db
  mountPath: /fluent-bit/db

updateStrategy: {}
#   type: RollingUpdate
#   rollingUpdate:
#     maxUnavailable: 1

# Make use of a pre-defined configmap instead of the one templated here
existingConfigMap: ""

luaScripts:
  systemd.lua: |
    function add_time(tag, timestamp, record)
      new_record = {}

      timeStr = os.date("!*t", timestamp["sec"])
      t = string.format("%4d-%02d-%02dT%02d:%02d:%02d.%sZ",
      timeStr["year"], timeStr["month"], timeStr["day"],
      timeStr["hour"], timeStr["min"], timeStr["sec"],
      timestamp["nsec"])

      kubernetes = {}
      kubernetes["pod_name"] = record["_HOSTNAME"]
      kubernetes["container_name"] = record["SYSLOG_IDENTIFIER"]
      kubernetes["namespace_name"] = "kube-system"

      new_record["time"] = t
      new_record["log"] = record["MESSAGE"]
      new_record["kubernetes"] = kubernetes

      return 1, timestamp, new_record
    end
  containerd.lua: |
    function containerd( tag, timestamp, record)
           if(record["logtag"]~=nil)
           then
           timeStr = os.date("!*t",  timestamp["sec"])
            t = string.format("%4d-%02d-%02dT%02d:%02d:%02d.%sZ",
            timeStr["year"], timeStr["month"], timeStr["day"],
            timeStr["hour"], timeStr["min"], timeStr["sec"],
            timestamp["nsec"]);
            record["time"] = t;
            record["log"] = record["message"];
            record["message"] =  nil;
            return 1, timestamp, record
            else
            return 0,timestamp,record
           end
    end

## https://docs.fluentbit.io/manual/administration/configuring-fluent-bit/classic-mode/configuration-file
config:
  service: |
    [SERVICE]
        Daemon Off
        Flush {{ .Values.flush }}
        Log_Level {{ .Values.logLevel }}
        Parsers_File /fluent-bit/etc/parsers.conf
        Parsers_File /fluent-bit/etc/conf/custom_parsers.conf
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_Port {{ .Values.metricsPort }}
        Health_Check On

  ## https://docs.fluentbit.io/manual/pipeline/inputs
  inputs: |
    [INPUT]
        Name              tail
        Tag               kube.*
        Path              /var/log/containers/*.log
        multiline.parser  docker, cri
        Mem_Buf_Limit     100MB
        Read_from_Head    false
        Refresh_Interval  10
        Skip_Long_Lines   true
        DB                /fluent-bit/db/kube.db
        DB.Sync           Normal

    [INPUT]
        Name              systemd
        Tag               service.*
        Path              /var/log/journal
        DB                /fluent-bit/db/systemd.db
        DB.Sync           Normal
        Systemd_Filter    _SYSTEMD_UNIT=docker.service
        Systemd_Filter    _SYSTEMD_UNIT=kubelet.service
        Read_From_Tail    On

  ## https://docs.fluentbit.io/manual/pipeline/filters
  filters: |
    [Filter]
        Name                kubernetes
        Match               kube.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Merge_Log           On
        Keep_Log            Off
        K8S-Logging.Parser  On
        K8S-Logging.Exclude On
        Labels              true
        Annotations         false
    [Filter]
        Name         nest
        Match        kube.*
        Operation    lift
        Nested_under kubernetes
        Add_prefix   kubernetes_
    [Filter]
        Name   modify
        Match  kube.*
        Remove stream
        Remove kubernetes_pod_id
        Remove kubernetes_host
        Remove kubernetes_container_hash
    [Filter]
        Name          nest
        Match         kube.*
        Operation     nest
        Wildcard      kubernetes_*
        Nest_under    kubernetes
        Remove_prefix kubernetes_
    [Filter]
        Name          lua
        Match         kube.*
        script        /fluent-bit/scripts/containerd.lua
        call          containerd
        time_as_table true
    [Filter]
        Name          lua
        Match         service.*
        script        /fluent-bit/scripts/systemd.lua
        call          add_time
        time_as_table true
    [FILTER]
        name  modify
        match *
        add   prom_cluster ${ .ClusterName }.${ .ClusterLabels.site }

  ## https://docs.fluentbit.io/manual/pipeline/outputs
  outputs: |
    [Output]
        Name               opensearch
        Buffer_Size        1M
        Match_Regex        (?:kube|service)\.(.*)
        Host               logging.logging
        Port               9200
        HTTP_User          ${`${OS_LOGGING_USERNAME}`}
        HTTP_Passwd        ${`${OS_LOGGING_PASSWORD}`}
        Index              logs-kube
        Write_Operation    create
        Replace_Dots       true
        Trace_Error        true
        Suppress_Type_Name true
        tls                On
        tls.verify         false

  ## https://docs.fluentbit.io/manual/administration/configuring-fluent-bit/classic-mode/upstream-servers
  ## This configuration is deprecated, please use `extraFiles` instead.
  upstream: {}

  ## https://docs.fluentbit.io/manual/pipeline/parsers
  customParsers: |
    [PARSER]
        Name docker_no_time
        Format json
        Time_Keep Off
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L

  # This allows adding more files with arbitrary filenames to /fluent-bit/etc/conf by providing key/value pairs.
  # The key becomes the filename, the value becomes the file content.
  extraFiles: {}
#     upstream.conf: |
#       [UPSTREAM]
#           upstream1
#
#       [NODE]
#           name       node-1
#           host       127.0.0.1
#           port       43000
#     example.conf: |
#       [OUTPUT]
#           Name example
#           Match foo.*
#           Host bar

# The config volume is mounted by default, either to the existingConfigMap value, or the default of "fluent-bit.fullname"
volumeMounts:
- name: config
  mountPath: /fluent-bit/etc/conf

daemonSetVolumes:
- name: varlog
  hostPath:
    path: /var/log
- name: varlibdockercontainers
  hostPath:
    path: /var/lib/docker/containers
- name: etcmachineid
  hostPath:
    path: /etc/machine-id
    type: File

daemonSetVolumeMounts:
- name: varlog
  mountPath: /var/log
- name: varlibdockercontainers
  mountPath: /var/lib/docker/containers
  readOnly: true
- name: etcmachineid
  mountPath: /etc/machine-id
  readOnly: true

command:
- /fluent-bit/bin/fluent-bit

args:
- --workdir=/fluent-bit/etc
- --config=/fluent-bit/etc/conf/fluent-bit.conf

# This supports either a structured array or a templatable string
initContainers: []

# Array mode
# initContainers:
#   - name: do-something
#     image: bitnami/kubectl:1.22
#     command: ['kubectl', 'version']

# String mode
# initContainers: |-
#   - name: do-something
#     image: bitnami/kubectl:{{ .Capabilities.KubeVersion.Major }}.{{ .Capabilities.KubeVersion.Minor }}
#     command: ['kubectl', 'version']

logLevel: info

hotReload:
  enabled: true
  image:
    repository: ghcr.io/jimmidyson/configmap-reload
    tag: v0.11.1
    digest:
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 60Mi
    limits:
      cpu: 100m
      memory: 60Mi
