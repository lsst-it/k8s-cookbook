kind: Deployment

replicaCount: 2

serviceMonitor:
  enabled: true
  selector:
    lsst.io/monitor: "true"

resources:
  limits:
    cpu: 750m
    memory: 750Mi
  requests:
    cpu: 500m
    memory: 500Mi

podDisruptionBudget:
  enabled: true
  maxUnavailable: 1

metricsPort: 2020

extraPorts:
- port: 5140
  containerPort: 5140
  protocol: TCP
  name: rsyslog-tcp
- port: 5140
  containerPort: 5140
  protocol: UDP
  name: rsyslog-udp
- port: 5141
  containerPort: 5141
  protocol: TCP
  name: firewall-tcp
- port: 5141
  containerPort: 5141
  protocol: UDP
  name: firewall-udp
- port: 5142
  containerPort: 5142
  protocol: TCP
  name: network-tcp
- port: 5142
  containerPort: 5142
  protocol: UDP
  name: network-udp

extraVolumes:
- name: db
  emptyDir:
    sizeLimit: 128Mi

extraVolumeMounts:
- name: db
  mountPath: /fluent-bit/db
- name: cert
  mountPath: /etc/secrets/certicate
  readOnly: true

config:
  service: |
    [SERVICE]
        Daemon Off
        Flush 1
        Log_Level info
        Parsers_File /fluent-bit/etc/parsers.conf
        Parsers_File /fluent-bit/etc/conf/custom_parsers.conf
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_Port {{ .Values.metricsPort }}
        Health_Check On

  inputs: |
    # host syslog
    [Input]
        Name   syslog
        Tag    rsyslog.tcp.*
        Listen 0.0.0.0
        Port   5140
        Mode   tcp
        Parser syslog-rfc3164
        tls          on
        tls.verify   off
        tls.crt_file /etc/secrets/certicate/tls.crt
        tls.key_file /etc/secrets/certicate/tls.key
    # firewall logs
    [Input]
        Name   syslog
        Tag    firewall.tcp.*
        Listen 0.0.0.0
        Port   5141
        Mode   tcp
        Parser syslog-rfc5424
        tls          on
        tls.verify   off
        tls.crt_file /etc/secrets/certicate/tls.crt
        tls.key_file /etc/secrets/certicate/tls.key
    [Input]
        Name   syslog
        Tag    firewall.udp.*
        Listen 0.0.0.0
        Port   5141
        Mode   udp
        Parser syslog-rfc5424
    # network logs
    [Input]
        Name   syslog
        Tag    network.tcp.*
        Listen 0.0.0.0
        Port   5142
        Mode   tcp
        Parser syslog-rfc3164
        tls          on
        tls.verify   off
        tls.crt_file /etc/secrets/certicate/tls.crt
        tls.key_file /etc/secrets/certicate/tls.key
    [Input]
        Name   syslog
        Tag    network.udp.*
        Listen 0.0.0.0
        Port   5142
        Mode   udp
        Parser syslog-rfc3164
  outputs: |
    [OUTPUT]
        Name              loki
        Match             *
        Host              loki.${ get .ClusterLabels "management.cattle.io/cluster-display-name" }.${ .ClusterLabels.site }.lsst.org
        Port              443
        TLS               On
        TLS.Verify        Off
        Label_Keys         $host,$log_type,$source
        Line_Format        json
        Auto_Kubernetes_Labels Off
        Remove_Keys        stream _p pod_ip container_image
  filters: |
    [FILTER]
        Name rewrite_tag
        Match rsyslog.*
        Rule $ident "sudo" sudo.$host.$ident true
        Emitter_Name rewrite_sudo_emitter
        Emitter_Storage.type memory

    [FILTER]
        Name parser
        Match sudo.*
        Parser sudo_parser
        Key_Name message
        Preserve_Key true
        Reserve_Data true

    [FILTER]
        Name grep
        Match sudo.*
        Regex user .*

    [FILTER]
        Name grep
        Match sudo.*
        Regex command .*

    [FILTER]
        Name modify
        Match sudo.*
        Add alertname sudoLog
        Add receivers ,slack,
        Add log_type sudo
        Add source external
        Rename message full_log

    [FILTER]
        Name modify
        Match rsyslog.*
        Add log_type rsyslog
        Add source external

    [FILTER]
        Name modify
        Match audit.*
        Add log_type audit
        Add source external

    [FILTER]
        Name modify
        Match syslog.*
        Add log_type syslog
        Add source external

    [FILTER]
        Name   parser
        Match  firewall.*
        Key_Name msg
        Parser pfsense_syslog_parser
        Preserve_Key true
        Reserve_Data true

    [FILTER]
        Name   modify
        Match  firewall.*
        Add    log_type firewall
        Add    source   external
        Rename msg full_log
        Remove anchor
        Remove offset
        Remove urg

    [FILTER]
        Name modify
        Match network.*
        Add log_type network
        Add source external

  customParsers: |
    [PARSER]
      Name systemd_session_parser
      Format regex
      Regex ^(?<pam_module>[\w]*)\((?<command>[\w\-:]*)\)?\: session opened for user root\(uid=(?<uid>[\d*])\) by \(uid=(?<user_uid>[\d*])\)$
      Types uid:integer user_uid:integer

    [PARSER]
      Name sudo_parser
      Format regex
      Regex ^(?<user>[\w]+)\s*:?\s*(?<notification>[\w\s]+)\s*;?\s*TTY=(?<tty>[\w\/]+)\s*;?\s*PWD=(?<working_directory>[\w\/]+)\s*;?\s*USER=(?<sudo_user>[\w]+)\s*;?\s*COMMAND=(?<command>.+)$

    [PARSER]
      Name        pfsense_syslog_parser
      Format      regex
      Regex       ^.*\[fwlog\] (?<rule_id>[^,]*),(?<sub_rule>[^,]*),(?<anchor>[^,]*),(?<tracker>[^,]*),(?<iface>[^,]*),(?<reason>[^,]*),(?<action>[^,]*),(?<dir>[^,]*),(?<ipver>[^,]*),(?<tos>[^,]*),(?<ecn>[^,]*),(?<ttl>[^,]*),(?<id>[^,]*),(?<offset>[^,]*),(?<flags>[^,]*),(?<proto_id>[^,]*),(?<proto>[^,]*),(?<len>[^,]*),(?<src_ip>[^,]*),(?<dst_ip>[^,]*),(?<src_port>[^,]*),(?<dst_port>[^,]*),(?<data_len>[^,]*),(?<tcp_flags>[^,]*),(?<seq>[^,]*),(?<ack>[^,]*),(?<window>[^,]*),(?<urg>[^,]*),(?<options>[^,\n]*)$
      Time_Keep   On
