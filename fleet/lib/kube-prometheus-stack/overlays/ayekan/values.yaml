---
prometheus:
  prometheusSpec:
    configMaps:
      - sd-snmp-network
      - sd-snmp-raritan-pdu
    secrets:
      - puppetdb
    additionalScrapeConfigs:
      - job_name: node-exporter-dev
        puppetdb_sd_configs:
          - url: https://puppetdb.dev.lsst.org:8443
            basic_auth:
              username: svc_prometheus
              password_file: /etc/prometheus/secrets/puppetdb/password
            query: |
              resources {
                type = "Class" and title = "Profile::Core::Node_info" and
                certname in resources[certname] {
                  type = "Class" and title = "Prometheus::Node_exporter"
                }
              }
            refresh_interval: 30s
            follow_redirects: true
            include_parameters: true
            enable_http2: true
            port: 9100
        relabel_configs: &puppet-node-exporter
          - source_labels: [__meta_puppetdb_certname]
            target_label: instance
          - source_labels: [__meta_puppetdb_environment]
            target_label: environment
          - source_labels: [__meta_puppetdb_parameter_site]
            target_label: site
          - source_labels: [__meta_puppetdb_parameter_role]
            target_label: role
          - source_labels: [__meta_puppetdb_parameter_cluster]
            target_label: cluster
      - job_name: node-exporter-ls
        puppetdb_sd_configs:
          - url: https://puppetdb.ls.lsst.org:8443
            basic_auth:
              username: svc_prometheus
              password_file: /etc/prometheus/secrets/puppetdb/password
            query: |
              resources {
                type = "Class" and title = "Profile::Core::Node_info" and
                certname in resources[certname] {
                  type = "Class" and title = "Prometheus::Node_exporter"
                }
              }
            refresh_interval: 30s
            follow_redirects: true
            include_parameters: true
            enable_http2: true
            port: 9100
        relabel_configs: *puppet-node-exporter
      - job_name: blackbox-ping-dev
        metrics_path: /probe
        params:
          module: [icmp]
        puppetdb_sd_configs:
          - url: https://puppetdb.dev.lsst.org:8443
            basic_auth:
              username: svc_prometheus
              password_file: /etc/prometheus/secrets/puppetdb/password
            query: resources { type = "Class" and title = "Prometheus::Node_exporter" }
            refresh_interval: 30s
            follow_redirects: true
            include_parameters: true
            enable_http2: true
        relabel_configs: &k8s-blackbox-monitoring
          - source_labels: [__meta_puppetdb_certname]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: prometheus-blackbox-exporter.blackbox-exporter:9115
      - job_name: blackbox-ping-ls
        metrics_path: /probe
        params:
          module: [icmp]
        puppetdb_sd_configs:
          - url: https://puppetdb.ls.lsst.org:8443
            basic_auth:
              username: svc_prometheus
              password_file: /etc/prometheus/secrets/puppetdb/password
            query: resources { type = "Class" and title = "Prometheus::Node_exporter" }
            refresh_interval: 30s
            follow_redirects: true
            include_parameters: true
            enable_http2: true
        relabel_configs: *k8s-blackbox-monitoring
      - job_name: snmp-network
        metrics_path: /snmp
        params:
          module: [if_mib]
          auth: [rubin_v2]
        file_sd_configs:
          - files:
              - /etc/prometheus/configmaps/sd-snmp-network/snmp-network.json
        relabel_configs: &network-snmp-relabel
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__meta_hostname]
            target_label: instance
          - source_labels: [__meta_network_function]
            target_label: network_function
          - target_label: __address__
            replacement: prometheus-snmp-exporter.snmp-exporter:9116
      - job_name: blackbox-network
        metrics_path: /probe
        params:
          module: [icmp]
        file_sd_configs:
          - files:
              - /etc/prometheus/configmaps/sd-snmp-network/snmp-network.json
              - /etc/prometheus/configmaps/sd-snmp-raritan-pdu/snmp-raritan-pdu.json
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__meta_hostname]
            target_label: instance
          - source_labels: [__meta_network_function]
            target_label: network_function
          - target_label: __address__
            replacement: prometheus-blackbox-exporter.blackbox-exporter:9115
      - job_name: snmp-raritan-pdu
        metrics_path: /snmp
        params:
          module: [raritan]
          auth: [rubin_v2]
        file_sd_configs:
          - files:
              - /etc/prometheus/configmaps/sd-snmp-raritan-pdu/snmp-raritan-pdu.json
        relabel_configs: &snmp-relabel
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__meta_hostname]
            target_label: instance
          - target_label: __address__
            replacement: prometheus-snmp-exporter.snmp-exporter:9116
      - job_name: snmp-xups-public
        metrics_path: /snmp
        params:
          module: [xups]
          auth: [public_v1]
        static_configs:
          - targets:
              - 10.18.3.31
            labels:
              __meta_hostname: ups-01
        relabel_configs: *snmp-relabel
      - job_name: snmp-xups
        metrics_path: /snmp
        params:
          module: [xups]
          auth: [lsst_v1]
        static_configs:
          - targets:
              - 10.18.3.62
            labels:
              __meta_hostname: ups-02
        relabel_configs: *snmp-relabel
      - job_name: snmp-schneider-pm5xxx
        metrics_path: /snmp
        params:
          module: [schneider_pm5xxx]
          auth: [public_v1]
        static_configs:
          - targets:
              - 10.18.3.21
            labels:
              __meta_hostname: pdu-01
        relabel_configs: *snmp-relabel

alertmanager:
  alertmanagerSpec:
    secrets:
      - lsst-webhooks
  config:
    global:
      slack_api_url_file: /etc/alertmanager/secrets/lsst-webhooks/slack-test
    route:
      group_by: [alertname, namespace, site]
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 24h
      receiver: "null"
      routes:
        - receiver: "null"
          matchers:
            - alertname = "InfoInhibitor"
        - receiver: watchdog
          matchers:
            - alertname = "Watchdog"
        - receiver: squadcast-test
          matchers:
            - receivers =~ ".*,squadcast,.*"
          continue: true
        - receiver: slack-test
          matchers:
            - receivers =~ ".*,slack,.*"
          continue: true
          routes:
            - receiver: slack-kube-test
              matchers:
                - alertname =~ "Kube.*"
            - receiver: slack-node-test
              group_by: [instance]
              matchers:
                - alertname =~ "Node.*"
            - receiver: slack-network-test
              group_by: [instance]
              matchers:
                - alertname =~ "Network.*"
        - receiver: slack-logs
          matchers:
            - alertname =~ "sudoLog"
          continue: true
        # Below is an example for the namespace based alert routing.
        # This will send alerts from a namespace to the namespace specific team
        # on slack
        # - receiver: slack-rook-ceph-team
        #   matchers:
        #     - namespace = "rook-ceph"
        # Below is an example for the group based alert routing.
        # This will send alerts with a specifc group in the receiver list to the
        # alert channel.
        # - receiver: email-group
        #   matchers:
        #     - receivers =~ ".*,group,.*"
    receivers:
      - name: "null"
      - name: watchdog
      - name: slack-test
        slack_configs:
          - username: ${ .ClusterName }-general
            channel: "#rubinobs-monitoring-test"
            send_resolved: true
            title: '{{ template "slack.o11y.generic.title" . }}'
            text: '{{ template "slack.o11y.generic.text" . }}'
      - name: slack-kube-test
        slack_configs:
          - username: ${ .ClusterName }-kube
            channel: "#rubinobs-monitoring-test"
            send_resolved: true
            title: '{{ template "slack.o11y.kube.title" . }}'
            text: '{{ template "slack.o11y.kube.text" . }}'
      - name: slack-node-test
        slack_configs:
          - username: ${ .ClusterName }-nodes
            channel: "#rubinobs-monitoring-test"
            send_resolved: true
            text: '{{ template "slack.o11y.node.text" . }}'
      - name: slack-network-test
        slack_configs:
          - username: ${ .ClusterName }-network
            channel: "#rubinobs-monitoring-test"
            send_resolved: true
            text: '{{ template "slack.o11y.network.text" . }}'
      - name: slack-logs
        slack_configs:
          - username: ${ .ClusterName }-network
            channel: "#rubinobs-monitoring-test"
            send_resolved: false
            title: '{{ template "slack.o11y.log.title" . }}'
            text: '{{ template "slack.o11y.log.text" . }}'
      - name: squadcast-test
        webhook_configs:
          - url_file: /etc/alertmanager/secrets/lsst-webhooks/squadcast-example
      - name: slack-rook-ceph-team
      - name: slack-metallb-team
      - name: slack-monitoring-team
      - name: kafka-alerts
        webhook_configs:
          - url_file: /etc/alertmanager/secrets/lsst-webhooks/kafka
grafana:
  defaultDashboardsEnabled: false
