apiVersion: fluentbit.fluent.io/v1alpha2
kind: FluentBitConfig
metadata:
  name: fluent-bit-config-kube
  labels:
    app.kubernetes.io/name: fluent-bit-kube
spec:
  service:
    parsersFile: parsers.conf
    httpServer: true
  filterSelector:
    matchLabels:
      lsst.fluentbit.io/kube: "true"
  outputSelector:
    matchLabels:
      lsst.fluentbit.io/kube: "true"
---
apiVersion: fluentbit.fluent.io/v1alpha2
kind: FluentBit
metadata:
  name: fluent-bit-kube
  labels:
    app.kubernetes.io/name: fluent-bit-kube
spec:
  image: ghcr.io/fluent/fluent-operator/fluent-bit:3.0.7
  positionDB:
    hostPath:
      path: /var/lib/fluent-bit/
  resources:
    requests:
      cpu: 10m
      memory: 25Mi
    limits:
      cpu: 500m
      memory: 200Mi
  fluentBitConfigName: fluent-bit-config-kube
  tolerations:
    - operator: Exists
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-role.kubernetes.io/edge
                operator: DoesNotExist
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-lua
  labels:
    lsst.fluentbit.io/kube: "true"
data:
  systemd.lua: |
    function add_time(tag, timestamp, record)
      new_record = {}

      timeStr = os.date("!*t", timestamp["sec"])
      t = string.format("%4d-%02d-%02dT%02d:%02d:%02d.%sZ",
      timeStr["year"], timeStr["month"], timeStr["day"],
      timeStr["hour"], timeStr["min"], timeStr["sec"],
      timestamp["nsec"])

      kubernetes = {}
      kubernetes["pod_name"] = record["_HOSTNAME"]
      kubernetes["container_name"] = record["SYSLOG_IDENTIFIER"]
      kubernetes["namespace_name"] = "kube-system"

      new_record["time"] = t
      new_record["log"] = record["MESSAGE"]
      new_record["kubernetes"] = kubernetes

      return 1, timestamp, new_record
    end
  containerd.lua: |
    function containerd( tag, timestamp, record)
           if(record["logtag"]~=nil)
           then
           timeStr = os.date("!*t",  timestamp["sec"])
            t = string.format("%4d-%02d-%02dT%02d:%02d:%02d.%sZ",
            timeStr["year"], timeStr["month"], timeStr["day"],
            timeStr["hour"], timeStr["min"], timeStr["sec"],
            timestamp["nsec"]);
            record["time"] = t;
            record["log"] = record["message"];
            record["message"] =  nil;
            return 1, timestamp, record
            else
            return 0,timestamp,record
           end
    end
---
apiVersion: fluentbit.fluent.io/v1alpha2
kind: ClusterInput
metadata:
  name: systemd-docker
  labels:
    lsst.fluentbit.io/kube: "true"
spec:
  systemd:
    tag: service.*
    path: /var/log/journal
    db: /fluent-bit/tail/systemd.db
    dbSync: Normal
    systemdFilter:
      - _SYSTEMD_UNIT=docker.service
      - _SYSTEMD_UNIT=kubelet.service
---
apiVersion: fluentbit.fluent.io/v1alpha2
kind: ClusterInput
metadata:
  name: container-tail
  labels:
    lsst.fluentbit.io/kube: "true"
spec:
  tail:
    tag: kube.*
    path: /var/log/containers/*.log
    parser: docker
    refreshIntervalSeconds: 10
    memBufLimit: 100MB
    skipLongLines: true
    db: /fluent-bit/tail/pos.db
    dbSync: Normal
---
apiVersion: fluentbit.fluent.io/v1alpha2
kind: Filter
metadata:
  name: kubernetes
  labels:
    lsst.fluentbit.io/kube: "true"
spec:
  match: kube.*
  filters:
    - kubernetes:
        kubeURL: https://kubernetes.default.svc:443
        kubeCAFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        kubeTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        labels: false
        annotations: false
    - nest:
        operation: lift
        nestedUnder: kubernetes
        addPrefix: kubernetes_
    - modify:
        rules:
          - remove: stream
          - remove: kubernetes_pod_id
          - remove: kubernetes_host
          - remove: kubernetes_container_hash
    - nest:
        operation: nest
        wildcard:
          - kubernetes_*
        nestUnder: kubernetes
        removePrefix: kubernetes_
---
apiVersion: fluentbit.fluent.io/v1alpha2
kind: Filter
metadata:
  name: systemd
  labels:
    lsst.fluentbit.io/kube: "true"
spec:
  match: service.*
  filters:
    - lua:
        script:
          key: systemd.lua
          name: fluent-bit-lua
        call: add_time
        timeAsTable: true
---
apiVersion: fluentbit.fluent.io/v1alpha2
kind: Filter
metadata:
  name: containerd
  labels:
    lsst.fluentbit.io/kube: "true"
spec:
  match: kube.*
  filters:
    - lua:
        script:
          key: containerd.lua
          name: fluent-bit-lua
        call: containerd
        timeAsTable: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-containerd-config
  labels:
    lsst.fluentbit.io/kube: "true"
data:
---
apiVersion: fluentbit.fluent.io/v1alpha2
kind: Output
metadata:
  name: logging-kube
  labels:
    lsst.fluentbit.io/kube: "true"
spec:
  matchRegex: (?:kube|service)\.(.*)
  opensearch:
    host: logging.logging
    port: 9200
    httpUser:
      valueFrom:
        secretKeyRef:
          name: fluentbit-kube-credentials
          key: username
    httpPassword:
      valueFrom:
        secretKeyRef:
          name: fluentbit-kube-credentials
          key: password
    index: logs-kube
    writeOperation: create
    replaceDots: true
    traceError: true
    suppressTypeName: true
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: fluentbit-kube-credentials
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  data:
    - secretKey: username
      remoteRef:
        key: logging-os-kube
        property: username
    - secretKey: password
      remoteRef:
        key: logging-os-kube
        property: password
  target:
    creationPolicy: Owner
