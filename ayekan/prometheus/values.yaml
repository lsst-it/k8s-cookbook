---
prometheus:
  prometheusSpec:
    externalUrl: https://prometheus.ayekan.ls.lsst.org
    serviceMonitorNamespaceSelector:
      matchLabels:
        o11y.eu/monitor: "enabled"
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    remoteWrite:
      - url: http://ayekan-mimir-gateway.mimir:80/api/v1/push
    additionalScrapeConfigs:
      - job_name: node_exporter_puppetdb_dev
        puppetdb_sd_configs:
          - url: "http://puppetdb.dev.lsst.org:8080"
            query: "resources { type = \"Class\" and title = \"Prometheus::Node_exporter\" }"
            port: 9100
            refresh_interval: "30s"
            follow_redirects: true
            include_parameters: true
            enable_http2: true
      - job_name: node_exporter_puppetdb_ls
        puppetdb_sd_configs:
          - url: "http://puppetdb.ls.lsst.org:8080"
            query: "resources { type = \"Class\" and title = \"Prometheus::Node_exporter\" }"
            port: 9100
            refresh_interval: "30s"
            follow_redirects: true
            include_parameters: true
            enable_http2: true
      - job_name: blackbox-ping-dev
        metrics_path: /probe
        params:
          module: [icmp]
        puppetdb_sd_configs:
          - url: "http://puppetdb.dev.lsst.org:8080"
            query: "resources { type = \"Class\" and title = \"Prometheus::Node_exporter\" }"
            refresh_interval: "30s"
            follow_redirects: true
            include_parameters: true
            enable_http2: true
        relabel_configs: &k8s-blackbox-monitoring
          - source_labels: [__meta_puppetdb_certname]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: "blackbox-exporter-prometheus-blackbox-exporter.monitoring:9115"
      - job_name: blackbox-ping-ls
        metrics_path: /probe
        params:
          module: [icmp]
        puppetdb_sd_configs:
          - url: "http://puppetdb.ls.lsst.org:8080"
            query: "resources { type = \"Class\" and title = \"Prometheus::Node_exporter\" }"
            refresh_interval: "30s"
            follow_redirects: true
            include_parameters: true
            enable_http2: true
        relabel_configs: *k8s-blackbox-monitoring
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/backend-protocol: HTTP
      nginx.ingress.kubernetes.io/server-snippet: |
        proxy_ssl_verify off;
    paths:
      - /
    pathType: Prefix
    hosts:
      - prometheus.ayekan.ls.lsst.org
    tls:
      - secretName: tls-prometheus-ingress
        hosts:
          - prometheus.ayekan.ls.lsst.org

alertmanager:
  alertmanagerSpec:
    externalUrl: https://alertmanager.ayekan.ls.lsst.org
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/backend-protocol: HTTP
      nginx.ingress.kubernetes.io/server-snippet: |
        proxy_ssl_verify off;
    paths:
      - /
    pathType: Prefix
    hosts:
      - alertmanager.ayekan.ls.lsst.org
    tls:
      - secretName: tls-alertmanager-ingress
        hosts:
          - alertmanager.ayekan.ls.lsst.org
  config:
    global:
      resolve_timeout: 5m
    route:
      group_by: ["namespace", "cluster"]
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 24h
      receiver: "slack-test"
      routes:
        - receiver: "null"
          matchers:
            - alertname =~ "InfoInhibitor|Watchdog"
    receivers:
      - name: "null"
      - name: "slack-test"
        slack_configs:
          - username: "ayekan-prometheus"
            channel: "#rubinobs-monitoring-test"
            send_resolved: true
    templates:
      - "/etc/alertmanager/config/*.tmpl"

grafana:
  persistence:
    enabled: true
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/backend-protocol: HTTP
      nginx.ingress.kubernetes.io/server-snippet: |
        proxy_ssl_verify off;
    paths:
      - /
    pathType: Prefix
    hosts:
      - grafana.ayekan.ls.lsst.org
    tls:
      - secretName: tls-grafana-ingress
        hosts:
          - grafana.ayekan.ls.lsst.org
